defaults: &node
  docker:
    - image: circleci/node:8

defaults: &docker
  docker:
    - image: quay.io/paulpop/docker-compose
      environment:
        APP_NAME: node-express-service
        IMAGE_NAME: quay.io/paulpop/node-express-service

version: 2
jobs:
  build:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - ~/node_modules
      - run:
          name: Check code formatting
          command: yarn lint
      - run:
          name: Run tests and upload to Codecov
          command: |
            yarn test
            bash <(curl -s https://codecov.io/bash)

  docker:
      <<: *docker
      steps:
        - checkout
        - setup_remote_docker
        - attach_workspace:
            at: .
        - run:
            name: Build container with the git commit sha version and latest version
            command: docker build -t andspuds/flight-info-api:$CIRCLE_SHA1 -t andspuds/flight-info-api .
        - run:
            name: Start container and verify it's healthy
            command: |
              set -x
              docker-compose up -d
              docker run --network container:$APP_NAME mwendler/wget -qO- \
                --retry-connrefused --tries=10 --waitretry 6 http://localhost:8080/health
        - run:
            name: Push image to Dockerhub
            command: |
              if [[ $CIRCLE_BRANCH == 'master' ]]; then
                  docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
                  docker push docker.io/andspuds/flight-info-api:$CIRCLE_SHA1
                  docker push docker.io/andspuds/flight-info-api
              else
                  echo Skipping this step as we are not on 'master' branch
              fi
  deploy:
      machine:
        environment:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints:
              - "02:86:26:5b:4e:e6:eb:ea:3b:e6:27:6f:ad:27:88:98"
        - run:
            name: Deploy latest image
            command: |
              if [[ $CIRCLE_BRANCH == 'master' ]]; then
                  ssh -o "StrictHostKeyChecking=no" docker@35.178.196.240 \
                  "docker service --env-add AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env-add AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY update --image docker.io/andspuds/flight-info-api:$CIRCLE_SHA1 flight-info-api"
              else
                  echo Skipping this step as we are not on 'master' branch
              fi
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - docker:
          context: default
          requires:
            - build
      - deploy:
          requires:
            - docker
